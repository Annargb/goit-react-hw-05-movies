{"version":3,"file":"static/js/622.015bb77a.chunk.js","mappings":"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","sources":["components/MovieDescription - component/FilmDescription-component/Filmdescription.styled.js","components/MovieDescription - component/FilmDescription-component/FilmDescription.jsx","services/formatData.js","components/MovieDescription - component/MovieDescriprion.styled.js","components/MovieDescription - component/MovieDescription.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleOfFilm = styled.h1`\n  text-align: center;\n  margin-bottom: 28px;\n  color: rgba(31, 3, 85, 0.9);\n`;\n\nexport const ImageWrapper = styled.div`\n  max-width: 300px;\n`;\n\nexport const FilmWrapper = styled.div`\n  display: flex;\n  gap: 44px;\n  margin-bottom: 28px;\n  /* max-height: 900px; */\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n","import {\n  TitleOfFilm,\n  FilmWrapper,\n  ImageWrapper,\n  GenresList,\n} from './Filmdescription.styled';\nimport { formatDatefromApi, calculateVotes } from 'services/formatData';\n\nexport const FilmDescription = ({\n  description: {\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    runtime,\n    overview,\n    release_date,\n    poster_path,\n    backdrop_path,\n  },\n}) => {\n  const imageStart = 'https://image.tmdb.org/t/p/w500';\n  const date = release_date.slice(0, -6);\n  const formatedDate = formatDatefromApi(release_date);\n\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right, rgb(44, 38, 65, 0.8) calc((50vw - 170px) - 340px), rgb(47, 73, 34, 0.66) 50%, rgb(65, 25, 60, 0.9) 100%), url(${\n          imageStart + backdrop_path\n        })`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n      }}\n      // style={{\n      //   backgroundImage: `linear-gradient(to right, rgba(31.5, 10.5, 10.5, 1) calc((50vw - 170px) - 340px), rgba(31.5, 10.5, 10.5, 0.84) 50%, rgba(31.5, 10.5, 10.5, 0.84) 100%), url(${\n      //     imageStart + backdrop_path\n      //   })`,\n      //   backgroundSize: 'cover',\n      //   backgroundRepeat: 'no-repeat',\n      // }}\n    >\n      <TitleOfFilm>\n        {title} ({date})\n      </TitleOfFilm>\n      <FilmWrapper\n      // style={{\n      //   backgroundImage: `linear-gradient(to right, rgba(31.5, 10.5, 10.5, 1) calc((50vw - 170px) - 340px), rgba(31.5, 10.5, 10.5, 0.84) 50%, rgba(31.5, 10.5, 10.5, 0.84) 100%), url(${\n      //     imageStart + backdrop_path\n      //   })`,\n      //   backgroundSize: 'cover',\n      //   backgroundRepeat: 'no-repeat',\n      // }}\n      >\n        <ImageWrapper>\n          <img\n            src={\n              poster_path\n                ? imageStart + poster_path\n                : 'https://diekos.by/public/images/nophoto.jpg?v=1.0.6'\n            }\n            alt={title}\n          />\n        </ImageWrapper>\n        <ul>\n          <li>\n            <p>Vote average:</p>\n            <p>\n              {' '}\n              {calculateVotes(vote_average)} ({vote_count}{' '}\n              {vote_count === 1 ? 'vote' : 'votes'}).\n            </p>\n          </li>\n          <li>\n            <p>Release date:</p>\n            <p>{formatedDate}.</p>\n          </li>\n          <li>\n            <GenresList>\n              <p>Genres:</p>\n              {genres.map(({ name }) => (\n                <li key={name}>\n                  <p>{name}</p>\n                </li>\n              ))}\n            </GenresList>\n          </li>\n          <li>\n            <p>Duration:</p>\n            <p>{runtime} min.</p>\n          </li>\n          <li>\n            <p>Overview:</p>\n            <p>{overview}</p>\n          </li>\n        </ul>\n      </FilmWrapper>\n    </div>\n  );\n};\n","import { format } from 'date-fns';\n\nexport const formatDatefromApi = date => {\n  return format(Date.parse(date), 'd MMMM yyyy');\n};\n\nexport const calculateVotes = votes => {\n  if (votes === 0) {\n    return votes;\n  } else {\n    return votes.toFixed(1);\n  }\n};\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const AdditionInfoTitle = styled.h2`\n  margin-bottom: 20px;\n  color: rgba(31, 3, 85, 0.9);\n`;\n\nexport const AdditionInfoLink = styled(NavLink)`\n  &.active {\n    color: red;\n  }\n`;\n\nexport const ReturnBackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 170px;\n  padding: 12px;\n  border-radius: 25px;\n  background-color: rgba(31, 3, 85, 0.9);\n  border: none;\n  border: 1px solid #1f0355;\n`;\nexport const ButtonText = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const ReturnBackIcon = styled(TiArrowBackOutline)`\n  width: 28px;\n  height: 28px;\n  fill: #fff;\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FilmDescription } from './FilmDescription-component/FilmDescription';\nimport {\n  AdditionInfoLink,\n  AdditionInfoTitle,\n  ReturnBackButton,\n  ReturnBackIcon,\n  ButtonText,\n} from './MovieDescriprion.styled';\n\nexport const MovieDescription = ({ description }) => {\n  const location = useLocation();\n  const backLickLocation = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <ReturnBackButton to={backLickLocation.current}>\n        <ReturnBackIcon />\n        <ButtonText>Return Back</ButtonText>\n      </ReturnBackButton>\n      <FilmDescription description={description} />\n      <AdditionInfoTitle>Additional information</AdditionInfoTitle>\n      <ul>\n        <li>\n          <AdditionInfoLink to=\"cast\">Cast</AdditionInfoLink>\n        </li>\n        <li>\n          <AdditionInfoLink to=\"reviews\">Reviews</AdditionInfoLink>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMovieById } from 'services/api';\nimport { Loader } from 'components/Loader-component/Loader';\nimport { MovieDescription } from 'components/MovieDescription - component/MovieDescription';\n\nconst MovieDetails = () => {\n  const [fullMovieDescription, setFullMovieDescription] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesById = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const movieDetails = await fetchMovieById(movieId);\n        setFullMovieDescription(movieDetails);\n      } catch (error) {\n        setError(true);\n        toast.error('Oops, Something went wrong! Try reloading the page!', {\n          duration: 3500,\n          position: 'top-right',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && !error && <Loader />}\n      {fullMovieDescription && !isLoading && (\n        <>\n          <MovieDescription description={fullMovieDescription} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n\n      <Toaster />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '58dce637b823f2c00548f4a3a78afc72';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsOnMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieByRequest = async request => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${request}\n`);\n  return response.data.results;\n};\n"],"names":["TitleOfFilm","styled","_templateObject","_taggedTemplateLiteral","ImageWrapper","_templateObject2","FilmWrapper","_templateObject3","GenresList","_templateObject4","FilmDescription","_ref","votes","_ref$description","description","title","vote_average","vote_count","genres","runtime","overview","release_date","poster_path","backdrop_path","imageStart","date","slice","formatedDate","format","Date","parse","formatDatefromApi","_jsxs","style","backgroundImage","concat","backgroundSize","backgroundRepeat","backgroundPosition","children","_jsx","src","alt","toFixed","map","_ref2","name","AdditionInfoTitle","AdditionInfoLink","NavLink","ReturnBackButton","Link","ButtonText","ReturnBackIcon","TiArrowBackOutline","_templateObject5","MovieDescription","_location$state$from","_location$state","location","useLocation","backLickLocation","useRef","state","from","_Fragment","to","current","_useState","useState","_useState2","_slicedToArray","fullMovieDescription","setFullMovieDescription","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getMoviesById","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","fetchMovieById","sent","t0","toast","duration","position","finish","stop","apply","arguments","Loader","Suspense","fallback","Outlet","Toaster","axios","KEY","fetchTrendingMovies","response","abrupt","data","results","_callee2","_context2","_x","fetchReviewsOnMovie","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieByRequest","_ref5","_callee5","request","_context5","_x4"],"sourceRoot":""}