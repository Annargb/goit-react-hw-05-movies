{"version":3,"file":"static/js/134.404624f2.chunk.js","mappings":"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","sources":["pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByRequest } from 'services/api';\nimport { Loader } from 'components/Loader-component/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [listOfFilms, setListOfFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const updateQueryString = event => {\n    const request = event.target.value;\n\n    if (request === '') {\n      return setSearchParams({});\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const request = event.target.elements.searchFilms.value;\n\n    if (request === '') {\n      toast.error('Enter data in the field to search for movies', {\n        duration: 2500,\n        position: 'top-right',\n      });\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: request });\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const getMovieByRequest = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const movie = await fetchMovieByRequest(query);\n        setListOfFilms(movie);\n      } catch (error) {\n        setError(true);\n        toast.error('Oops, Something went wrong! Try reloading the page!', {\n          duration: 3500,\n          position: 'top-right',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieByRequest();\n  }, [query]);\n\n  return (\n    <div>\n      <h3>Movies page</h3>\n      <form onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchFilms\"\n          defaultValue={query}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {!isLoading && !error && (\n        <ul>\n          {listOfFilms.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Toaster />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '58dce637b823f2c00548f4a3a78afc72';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsOnMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieByRequest = async request => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${request}\n`);\n  return response.data.results;\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","listOfFilms","setListOfFilms","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMovieByRequest","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieByRequest","sent","t0","toast","duration","position","finish","stop","apply","arguments","_jsxs","children","_jsx","onSubmit","event","preventDefault","request","target","elements","searchFilms","value","type","name","defaultValue","onChange","Loader","map","_ref2","title","id","Link","to","concat","state","from","Toaster","axios","KEY","fetchTrendingMovies","response","abrupt","data","results","fetchMovieById","_callee2","movieId","_context2","_x","fetchReviewsOnMovie","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}