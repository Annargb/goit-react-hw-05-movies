{"version":3,"file":"static/js/622.921cc7f2.chunk.js","mappings":"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","sources":["components/MovieDescription - component/FilmDescription-component/Filmdescription.styled.js","components/MovieDescription - component/FilmDescription-component/FilmDescription.jsx","services/formatData.js","components/MovieDescription - component/MovieDescriprion.styled.js","components/MovieDescription - component/MovieDescription.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 28px;\n  padding: 28px 64px 28px 64px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nexport const TitleOfFilm = styled.h1`\n  text-align: center;\n  margin-bottom: 34px;\n  color: #fff;\n`;\n\nexport const ImageWrapper = styled.div`\n  max-width: 300px;\n`;\n\nexport const FilmWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 64px;\n  margin-bottom: 28px;\n`;\n\nexport const DescriptionList = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n`;\n\nexport const DescriptionText = styled.p`\n  color: #fff;\n`;\n\n// export const AccentText = styled.p`\n//   font-size: 18px;\n//   font-weight: 500;\n//   color: #fff;\n// `;\n\nexport const AccentText = styled.li`\n  margin-bottom: 14px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #fff;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ContainerDescription = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nexport const AccentList = styled.ul`\n  flex-shrink: 0;\n`;\n\nexport const DescriptionItem = styled.li`\n  line-height: 1.5;\n  margin-bottom: 18px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import {\n  Container,\n  TitleOfFilm,\n  FilmWrapper,\n  ImageWrapper,\n  // DescriptionList,\n  AccentList,\n  DescriptionItem,\n  GenresList,\n  ContainerDescription,\n  DescriptionText,\n  AccentText,\n} from './Filmdescription.styled';\nimport { formatDatefromApi, calculateVotes } from 'services/formatData';\n\nexport const FilmDescription = ({\n  description: {\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    runtime,\n    overview,\n    release_date,\n    poster_path,\n    backdrop_path,\n  },\n}) => {\n  const imageStart = 'https://image.tmdb.org/t/p/w500';\n  const date = release_date.slice(0, -6);\n  const formatedDate = formatDatefromApi(release_date);\n\n  return (\n    <Container\n      style={{\n        backgroundImage: `linear-gradient(to right, rgb(44, 38, 65, 0.8) calc((50vw - 170px) - 340px), rgb(47, 73, 34, 0.66) 50%, rgb(65, 25, 60, 0.9) 100%), url(${\n          imageStart + backdrop_path\n        })`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n      }}\n    >\n      <TitleOfFilm>\n        {title} ({date})\n      </TitleOfFilm>\n      <FilmWrapper>\n        <ImageWrapper>\n          <img\n            src={\n              poster_path\n                ? imageStart + poster_path\n                : 'https://diekos.by/public/images/nophoto.jpg?v=1.0.6'\n            }\n            alt={title}\n          />\n        </ImageWrapper>\n        <ContainerDescription>\n          <AccentList>\n            <AccentText>Vote average:</AccentText>\n            <AccentText>Release date:</AccentText>\n            <AccentText>Genres:</AccentText>\n            <AccentText>Duration:</AccentText>\n            <AccentText>Overview:</AccentText>\n          </AccentList>\n\n          <ul>\n            <DescriptionItem>\n              <DescriptionText>\n                {' '}\n                {calculateVotes(vote_average)} ({vote_count}{' '}\n                {vote_count === 1 ? 'vote' : 'votes'}).\n              </DescriptionText>\n            </DescriptionItem>\n            <DescriptionItem>\n              <DescriptionText>{formatedDate}.</DescriptionText>\n            </DescriptionItem>\n            <DescriptionItem>\n              {' '}\n              {genres.name ? (\n                <GenresList>\n                  {genres.map(({ name }) => (\n                    <li key={name}>\n                      <DescriptionText>{name}</DescriptionText>\n                    </li>\n                  ))}\n                </GenresList>\n              ) : (\n                <DescriptionText>{'---'}</DescriptionText>\n              )}\n              {/* <GenresList>\n                {genres.map(({ name }) => (\n                  <li key={name}>\n                    <DescriptionText>{name}</DescriptionText>\n                  </li>\n                ))}\n              </GenresList> */}\n            </DescriptionItem>\n            <DescriptionItem>\n              <DescriptionText>{runtime} min.</DescriptionText>\n            </DescriptionItem>\n            <DescriptionItem>\n              <DescriptionText>{overview}</DescriptionText>\n            </DescriptionItem>\n          </ul>\n        </ContainerDescription>\n        {/* <ul>\n          <DescriptionList>\n            <AccentText>Vote average:</AccentText>\n            <DescriptionText>\n              {' '}\n              {calculateVotes(vote_average)} ({vote_count}{' '}\n              {vote_count === 1 ? 'vote' : 'votes'}).\n            </DescriptionText>\n          </DescriptionList>\n          <DescriptionList>\n            <AccentText>Release date:</AccentText>\n            <DescriptionText>{formatedDate}.</DescriptionText>\n          </DescriptionList>\n          <DescriptionList>\n            <GenresList>\n              <AccentText>Genres:</AccentText>\n              {genres.map(({ name }) => (\n                <li key={name}>\n                  <DescriptionText>{name}</DescriptionText>\n                </li>\n              ))}\n            </GenresList>\n          </DescriptionList>\n          <DescriptionList>\n            <AccentText>Duration:</AccentText>\n            <DescriptionText>{runtime} min.</DescriptionText>\n          </DescriptionList>\n          <DescriptionList>\n            <AccentText>Overview:</AccentText>\n            <DescriptionText>{overview}</DescriptionText>\n          </DescriptionList>\n        </ul> */}\n      </FilmWrapper>\n    </Container>\n  );\n};\n","import { format } from 'date-fns';\n\nexport const formatDatefromApi = date => {\n  return format(Date.parse(date), 'd MMMM yyyy');\n};\n\nexport const calculateVotes = votes => {\n  if (votes === 0) {\n    return votes;\n  } else {\n    return votes.toFixed(1);\n  }\n};\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const AdditionInfoTitle = styled.h2`\n  font-size: 26px;\n  line-height: 1.5;\n  margin-bottom: 14px;\n  color: rgba(31, 3, 85, 0.9);\n`;\n\nexport const AdditionInfoLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 600;\n  color: #1d1d1d;\n\n  &.active {\n    color: rgba(31, 3, 85, 0.9);\n    text-decoration: underline;\n  }\n\n  &:hover,\n  &:focus {\n    color: rgba(31, 3, 85, 0.9);\n  }\n`;\n\nexport const ReturnBackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 170px;\n  padding: 12px;\n  border-radius: 25px;\n  background-color: rgba(31, 3, 85, 0.9);\n  border: none;\n  border: 1px solid #1f0355;\n  margin-bottom: 28px;\n`;\nexport const ButtonText = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const ReturnBackIcon = styled(TiArrowBackOutline)`\n  width: 28px;\n  height: 28px;\n  fill: #fff;\n`;\n\nexport const AdditionalList = styled.ul`\n  margin-bottom: 24px;\n`;\n\nexport const AdditionalListItem = styled.li`\n  margin-bottom: 14px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FilmDescription } from './FilmDescription-component/FilmDescription';\nimport {\n  AdditionInfoLink,\n  AdditionInfoTitle,\n  ReturnBackButton,\n  ReturnBackIcon,\n  ButtonText,\n  AdditionalList,\n  AdditionalListItem,\n} from './MovieDescriprion.styled';\n\nexport const MovieDescription = ({ description }) => {\n  const location = useLocation();\n  const backLickLocation = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <ReturnBackButton to={backLickLocation.current}>\n        <ReturnBackIcon />\n        <ButtonText>Return Back</ButtonText>\n      </ReturnBackButton>\n      <FilmDescription description={description} />\n      <AdditionInfoTitle>Additional information</AdditionInfoTitle>\n      <AdditionalList>\n        <AdditionalListItem>\n          <AdditionInfoLink to=\"cast\">Cast</AdditionInfoLink>\n        </AdditionalListItem>\n        <AdditionalListItem>\n          <AdditionInfoLink to=\"reviews\">Reviews</AdditionInfoLink>\n        </AdditionalListItem>\n      </AdditionalList>\n    </>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMovieById } from 'services/api';\nimport { Loader } from 'components/Loader-component/Loader';\nimport { MovieDescription } from 'components/MovieDescription - component/MovieDescription';\n\nconst MovieDetails = () => {\n  const [fullMovieDescription, setFullMovieDescription] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesById = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const movieDetails = await fetchMovieById(movieId);\n        setFullMovieDescription(movieDetails);\n      } catch (error) {\n        setError(true);\n        toast.error('Oops, Something went wrong! Try reloading the page!', {\n          duration: 3500,\n          position: 'top-right',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && !error && <Loader />}\n      {fullMovieDescription && !isLoading && (\n        <>\n          <MovieDescription description={fullMovieDescription} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n\n      <Toaster />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '58dce637b823f2c00548f4a3a78afc72';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsOnMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieByRequest = async request => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${request}\n`);\n  return response.data.results;\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","TitleOfFilm","_templateObject2","ImageWrapper","_templateObject3","FilmWrapper","_templateObject4","GenresList","_templateObject5","_templateObject6","DescriptionText","_templateObject7","AccentText","_templateObject8","ContainerDescription","_templateObject9","AccentList","_templateObject10","DescriptionItem","_templateObject11","FilmDescription","_ref","votes","_ref$description","description","title","vote_average","vote_count","genres","runtime","overview","release_date","poster_path","backdrop_path","imageStart","date","slice","formatedDate","format","Date","parse","formatDatefromApi","_jsxs","style","backgroundImage","concat","backgroundSize","backgroundRepeat","backgroundPosition","children","_jsx","src","alt","toFixed","name","map","_ref2","AdditionInfoTitle","AdditionInfoLink","NavLink","ReturnBackButton","Link","ButtonText","ReturnBackIcon","TiArrowBackOutline","AdditionalList","AdditionalListItem","MovieDescription","_location$state$from","_location$state","location","useLocation","backLickLocation","useRef","state","from","_Fragment","to","current","_useState","useState","_useState2","_slicedToArray","fullMovieDescription","setFullMovieDescription","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getMoviesById","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","fetchMovieById","sent","t0","toast","duration","position","finish","stop","apply","arguments","Loader","Suspense","fallback","Outlet","Toaster","axios","KEY","fetchTrendingMovies","response","abrupt","data","results","_callee2","_context2","_x","fetchReviewsOnMovie","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieByRequest","_ref5","_callee5","request","_context5","_x4"],"sourceRoot":""}