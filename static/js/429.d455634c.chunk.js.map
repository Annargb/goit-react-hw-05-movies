{"version":3,"file":"static/js/429.d455634c.chunk.js","mappings":"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","sources":["components/Cast-component/CastList-component/CastList.styled.jsx","components/Cast-component/CastList-component/CastList.jsx","components/Cast-component/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListOfCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 44px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 220px) / 6);\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 20px;\n  overflow: hidden;\n  margin-bottom: 14px;\n  /* width: 180px; */\n  height: 280px;\n`;\n\nexport const ActorName = styled.h5`\n  font-size: 16px;\n  text-align: center;\n  color: #1d1d1d;\n`;\n","import { ListOfCast, CastItem, ImgWrapper, ActorName } from './CastList.styled';\nimport unknown from '../../../img/un.jpg';\n\nexport const CastList = ({ cast }) => {\n  const imageStart = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <ListOfCast>\n      {cast.map(({ id, name, profile_path, gender }) => (\n        <CastItem key={id}>\n          <ImgWrapper>\n            <img\n              src={profile_path ? imageStart + profile_path : unknown}\n              alt={name}\n              width=\"300\"\n            />\n          </ImgWrapper>\n\n          <ActorName>{name}</ActorName>\n        </CastItem>\n      ))}\n    </ListOfCast>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMovieCast } from 'services/api';\nimport { CastList } from './CastList-component/CastList';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const cast = await fetchMovieCast(movieId);\n        setMovieCast(cast);\n      } catch (error) {\n        setError(true);\n        toast.error('Oops, Something went wrong! Try reloading the page!', {\n          duration: 3500,\n          position: 'top-right',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {!isLoading && !error && <CastList cast={movieCast} />}\n      {!movieCast.length && <p>We haven't found any actors for this movie.</p>}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '58dce637b823f2c00548f4a3a78afc72';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsOnMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieByRequest = async request => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${request}\n`);\n  return response.data.results;\n};\n"],"names":["ListOfCast","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","ImgWrapper","_templateObject3","ActorName","_templateObject4","CastList","_ref","cast","_jsx","children","map","_ref2","id","name","profile_path","gender","_jsxs","src","alt","width","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchMovieCast","sent","t0","toast","duration","position","finish","stop","apply","arguments","_Fragment","length","Toaster","axios","KEY","fetchTrendingMovies","response","concat","abrupt","data","results","fetchMovieById","_callee2","_context2","_x","fetchReviewsOnMovie","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieByRequest","_ref5","_callee5","request","_context5","_x4"],"sourceRoot":""}